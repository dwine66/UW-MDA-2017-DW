quit()
install.packages('swirl')
swirl
library('swirl')
swirl()
quit()
library(swirl)
swirl()
x
x[1:10]
x{is.na(x)}
x[is.na(x)]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
c(x(3:2:9))
fdsa
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
vect2
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
my_vector<-1:20
v
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
matrix(1:20,4,5)
matrix(1:20,4,5,byrow=TRUE
)
m_matrix<-ymatrix(1:20,4)
m_matrix<-matrix(1:20,4)
m_matrix<-matrix(1:20,4,5)
my_matrix<-matrix(1:20,4,5)
my_matrix2<-matrix(1:20,4,5)
my_matrix2<-matrix(1:20,4,5)
info()
my_matrix2<-matrix(1:20,nrow=14,ncol=5)
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
1
0
#14
x <- c('Red', 'Green', 'Blue', 'Green', 'Blue', 'Blue', 'Red', 'Blue', 'Yellow', 'Blue')
isRed <- x == 'Red'
isGreen <- x == 'Green'
isBlue <- x == 'Blue'
# You can cast T/F into 1/0
isRed <- as.numeric(isRed)
isGreen <- as.numeric(isGreen)
isBlue <- as.numeric(isBlue)
# As a data frame
data.frame(isRed, isGreen, isBlue)
source('C:/Users/dwine/Google Drive/UW Data Science/PatientReadmission.R')
source('C:/Users/dwine/Google Drive/UW Data Science/PatientReadmission.R')
source('~/.active-rstudio-document')
install.packages("sqldf")
test<-sqldf("select * from tableA fulljoin tableB on tableA.keyA=tableB.keyb",rownames=TRUE)
source('C:/Users/dwine/Google Drive/UW Data Science/Assignment 05_DW.R')
tableA
source('C:/Users/dwine/Google Drive/UW Data Science/Assignment 05_DW.R')
test<-sqldf("select * from tableA fulljoin tableB on tableA.keyA=tableB.keyb",rownames=TRUE)
sqldf()
# head
a1r <- head(warpbreaks)
a1s <- sqldf("select * from warpbreaks limit 6")
identical(a1r, a1s)
# subset
a2r <- subset(CO2, grepl("^Qn", Plant))
a2s <- sqldf("select * from CO2 where Plant like 'Qn%'")
all.equal(as.data.frame(a2r), a2s)
install.packages("sqldf")
a2r <- subset(CO2, grepl("^Qn", Plant))
a2s <- sqldf("select * from CO2 where Plant like 'Qn%'")
all.equal(as.data.frame(a2r), a2s)
a2r
a1r <- head(warpbreaks)
a1s <- sqldf("select * from warpbreaks limit 6")
source('C:/Users/dwine/Google Drive/UW Data Science/Assignment 05_DW.R')
install.packages(sqldf)
install.packages(sqldf::)
source('C:/Users/dwine/Google Drive/UW Data Science/Assignment 05_DW.R')
sqldf::sqldf("select * from warpbreaks limit 6")
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
install.packages('devtools')
devtools::install_github('IRkernel/IRkernel')
install.packages('repr')
install.packages('IRdisplay')
IRkernel::installspec(user = FALSE)
devtools::install_github('IRkernel/IRkernel')
install.packages('repr')
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
install.packages('Rtools')
install.packages('Rtools')
devtools::install_github('IRkernel/IRkernel')
install.packages('stringi')
devtools::install_github('IRkernel/IRkernel')
devtools::install_github('IRkernel/IRkernel')
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
install.packages('IRkernel')
devtools::install_github('IRkernel/IRkernel')
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
install.packages('curl')
install.packages('ggplot2')
pick.another <-function(not.this.one,all.possible){
x <- as.integer(runif(1,0,all.possible)+1
if(x == not.this.one) pick.another(not.this.one,all.possible) else x
}
source('C:/Users/dwine/Desktop/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
install.packages('plyr')
source('C:/Users/dwine/Desktop/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
install.packages('ggplot2')
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=3,fill='red')+
geom_histogram(binwidth=5,aes(med.st),fill='red')+
geom_histogram(binwidth=5,aes(hi.st),fill='red')+
geom_histogram(binwidth=5,aes(low.sw),fill='blue')+
geom_histogram(binwidth=5,aes(med.sw),fill='blue')+
geom_histogram(binwidth=5,aes(hi.sw),fill='blue')
require(ggplot2)
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=3,fill='red')+
geom_histogram(binwidth=5,aes(med.st),fill='red')+
geom_histogram(binwidth=5,aes(hi.st),fill='red')+
geom_histogram(binwidth=5,aes(low.sw),fill='blue')+
geom_histogram(binwidth=5,aes(med.sw),fill='blue')+
geom_histogram(binwidth=5,aes(hi.sw),fill='blue')
source('C:/Users/dwine/Desktop/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
setwd("C:/Users/dwine/Desktop/GitHub/UW-MDA-2017-DW")
