View(car.combined.df)
View(car.stay.df)
laply(n, function(n) car.stay.df/n
)
laply(n, function(n) car.stay.df/n)
lapply(n, function(n) car.stay.df/n)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
bw <-.04
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=bw,fill='red')+
xlim(0,1) +
geom_histogram(binwidth=bw,aes(med.st),fill='red')+
geom_histogram(binwidth=bw,aes(hi.st),fill='red')+
geom_histogram(binwidth=bw,aes(low.sw),color='blue',fill="NA")+
geom_histogram(binwidth=bw,aes(med.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='blue') +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
bw <-.02
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=bw,fill='red')+
xlim(0,1) +
geom_histogram(binwidth=bw,aes(med.st),fill='red')+
geom_histogram(binwidth=bw,aes(hi.st),fill='red')+
geom_histogram(binwidth=bw,aes(low.sw),color='blue',fill="NA")+
geom_histogram(binwidth=bw,aes(med.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='blue') +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
bw <-.02
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=bw,fill='red')+
xlim(0,1) +
geom_histogram(binwidth=bw,aes(med.st),fill='orange')+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),color='blue',fill="NA")+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=bw,fill='red')+
xlim(0,1) +
geom_histogram(binwidth=bw,aes(med.st),fill='orange')+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
bw <-.02
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=bw,fill='red')+
xlim(0,1) +
geom_histogram(binwidth=bw,aes(med.st),line='orange')+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
bw <-.02
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=bw,fill='red')+
xlim(0,1) +
geom_histogram(binwidth=bw,aes(med.st),line='orange', fill='NA')+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
bw <-.02
ggplot(car.combined.df,aes(x=low.st))+geom_histogram(binwidth=bw,fill='red')+
xlim(0,1) +
geom_histogram(binwidth=bw,aes(med.st),color='orange', fill='NA')+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,fill='red')+
geom_histogram(binwidth=bw,aes(med.st),color='orange', fill='NA',linetype='dotted')+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,fill='red')+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dotted')+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,fill='red')+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dotted',weight=3)+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,fill='red')+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dotted',size=3)+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,fill='red')+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dotted',size=2)+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,fill='red')+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),fill='yellow')+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),fill='blue')+
geom_histogram(binwidth=bw,aes(med.sw),fill='green')+
geom_histogram(binwidth=bw,aes(hi.sw),fill='purple') +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='dashed',size=1) +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
xlim(0,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(0,0.1:1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(0,0.33,0.66,1) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
car.combined.df
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,0.1)) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,1/6)) + xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,1/6), labels = c("1/6","1/3","1/2","2/3","5/6","1")) +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
gplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,1/6), labels = c("0","1/6","1/3","1/2","2/3","5/6","1")) +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,1/6), labels = c("0","1/6","1/3","1/2","2/3","5/6","1")) +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
car.stay.means
car.stay.binom.p
car.switch.binom.p
cat(car.stay.binom.p,"\n")
print(car.stay.binom.p,"\n")
car.stay.binom.p
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
bw <-.02
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,1/6), labels = c("0","1/6","1/3","1/2","2/3","5/6","1")) +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
car.combined.df <- cbind(car.stay.df,car.switch.df)
ggplot(car.combined.df,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,1/6), labels = c("0","1/6","1/3","1/2","2/3","5/6","1")) +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
car.stay.df.p <-  lapply(n, function(n) car.stay.df/n)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
car.stay.df
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
car.stay.switch/n
car.stay.df/n
car.stay.df[1]
car.stay.df[1]/n[1]
car.stay.df[,]/n[,]
car.stay.df[]/n[]
for (i in 1:3){
car.stay.df.p <-  car.stay.df[,i]/n[.i]
}
for (i in 1:3){
car.stay.df.p <-  car.stay.df[,i]/n[,i]
}
car.stay.df[,]/n[]
car.stay.df[,1]/n[,1]
car.stay.df[,1]/n[i]
for (i in 1:3){
car.stay.df.p <-  car.stay.df[,i]/n[i]
}
car.stay.df.p
for (i in 1:3){
car.stay.df.p <-  car.stay.df[,i]/n[i]
car.switch.df.p <-  car.switch.df[,i]/n[i]
}
car.combined.df.p <- cbind(car.stay.df.p,car.switch.df.p)
bw <-.02
car.combined.df.p
car.stay.df.p
car.stay.df
for (i in 1:3){
car.stay.df.p[,i] <-  car.stay.df[,i]/n[i]
car.switch.df.p[,i] <-  car.switch.df[,i]/n[i]
}
car.combined.df.p
car.combined.df
car.stay.df/n
ddply(car.stay.df,.fun /n)
ddply(car.stay.df,.fun=function(n) car.stay.df/n .margins=1)
ddply(car.stay.df,.fun=function(n) /n .margins=1)
ddply(car.stay.df,.fun=function(n) x/n .margins=1)
ddply(car.stay.df,.fun=function(n) 'car.stay.df'/n .margins=1)
ddply(car.stay.df,.fun=function(n) {car.stay.df'/n} .margins=1)
)
ddply(car.stay.df,.fun=function(n) {car.stay.df/n})
ddply(car.stay.df,.fun=function(n) {car.stay.df/n},.margins=1)
lapply(car.stay.df,.fun=function(n) {car.stay.df/n})
lapply(car.stay.df,.FUN=function(n) {car.stay.df/n})
lapply(car.stay.df,FUN=function(n) {car.stay.df/n})
lapply(n,FUN=function(n) {car.stay.df/n})
car.switch.df.p <-  lapply(n, function(n) {car.switch.df/n})
lapply(car.stay.df,FUN=function(n) {car.stay.df/n})
car.switch.df.p <-  lapply(car.switch.df, function(n) {car.switch.df/n})
car.switch.df.p
car.switch.df.p <-  lapply(car.switch.df, margin=1, function(n) {car.switch.df/n})
car.switch.df.p[,1]=car.switch.df[,1]/n[1]
for (i in 1:3){
for(j in 1:m){
car.switch.df.p[j,i] <- car.switch.df[j,i]/n[i]
}
}
car.switch.df.p <- car.switch.df
for (i in 1:3){
for(j in 1:m){
car.switch.df.p[j,i] <- car.switch.df[j,i]/n[i]
}
}
car.stay.df.p <- car.stay.df
car.switch.df.p <- car.switch.df
for (i in 1:3){
for(j in 1:m){
car.stay.df.p[j,i] <- car.stay.df[j,i]/n[i]
car.switch.df.p[j,i] <- car.switch.df[j,i]/n[i]
}
}
car.combined.df.p <- cbind(car.stay.df.p,car.switch.df.p)
ggplot(car.combined.df.p,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,1/6), labels = c("0","1/6","1/3","1/2","2/3","5/6","1")) +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
ggplot(car.combined.df.p,aes(x=low.st))+
geom_histogram(binwidth=bw,color='red', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.st),color='red', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.st),color='red', fill='NA',linetype='solid',size=1)+
geom_histogram(binwidth=bw,aes(low.sw),color='blue', fill='NA',linetype='dotted',size=1)+
geom_histogram(binwidth=bw,aes(med.sw),color='blue', fill='NA',linetype='dashed',size=1)+
geom_histogram(binwidth=bw,aes(hi.sw),color='blue', fill='NA',linetype='solid',size=1) +
scale_x_continuous(breaks=seq(0,1,1/6), labels = c("0","1/6","1/3","1/2","2/3","5/6","1")) +
xlab("Probability of winning a car")+ylab("Frequency") +
ggtitle("Cars won by switching (blue) vs. staying (red)")
car.combined.df.p
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
source('~/GitHub/UW-MDA-2017-DW/Assignment 3 - DW.R', echo=TRUE)
install.packages('HistData')
install.packages('resample')
install.packages('simpleboot')
install.packages('learnbayes')
install.packages('LearnBayes')
require(ggplot2)
require(car)
require(plyr)
require(dplyr)
require(HistData)
require(resample)
require(simpleboot)
source('~/GitHub/UW-MDA-2017-DW/Assignment 7 - Dave Wine.R', echo=TRUE)
install.packages('glmnet')
install.packages('gridextra')
install.packages('gridExtra')
source('~/GitHub/UW-MDA-2017-DW/Assignment 7 - Dave Wine.R', echo=TRUE)
setwd("~/GitHub/UW-MDA-2017-DW")
source('~/GitHub/UW-MDA-2017-DW/Assignment 7 - Dave Wine.R', echo=TRUE)
auto.data$price <-log(auto.data$price)
auto.data$price
lm.price = lm(price ~ ., data = auto.data)
summary(lm.price)
plot(lm.price)
summary(auto.data)
str(auto.data)
lapply(auto.data,scale)
scale(auto.data)
auto.data = read.auto()
str(auto.data)
summary(auto.data)
str(auto.data)
auto.data = read.auto()
read.auto = function(file = 'Automobile price data _Raw_.csv'){
auto.data <- read.csv(file, header=TRUE, stringsAsFactors=FALSE)
numcols <- c('bore','stroke','horsepower','price','peak.rpm')
auto.data[, numcols]<-lapply(auto.data[,numcols], as.numeric)
factcols <- c('make','fuel.type','aspiration','num.of.doors','drive.wheels',
+'engine.location','engine.type','num.of.cylinders','fuel.system','body.style')
auto.data[, factcols]<-lapply(auto.data[,factcols], as.factor)
auto.data[complete.cases(auto.data),]
}
auto.data = read.auto()
str(auto.data)
auto.data = read.auto()
str(auto.data)
auto.data <- read.auto()
read.auto = function(file = 'Automobile price data _Raw_.csv'){
auto.data <- read.csv(file, header=TRUE, stringsAsFactors=FALSE)
numcols <- c('bore','stroke','horsepower','price','peak.rpm')
auto.data[, numcols]<-lapply(auto.data[,numcols], as.numeric)
factcols <- c('make','fuel.type','aspiration','num.of.doors','drive.wheels',
+'engine.location','engine.type','num.of.cylinders','fuel.system','body.style')
auto.data[, factcols]<-lapply(auto.data[,factcols], as.factor)
auto.data[complete.cases(auto.data),]
}
auto.data <- read.auto()
str(auto.data)
read.auto = function(file = 'Automobile price data _Raw_.csv'){
auto.data <- read.csv(file, header=TRUE, stringsAsFactors=FALSE)
numcols <- c('bore','stroke','horsepower','price','peak.rpm')
auto.data[, numcols]<-lapply(auto.data[,numcols], as.numeric)
factcols <- c('make','fuel.type','aspiration','num.of.doors','drive.wheels',+
'engine.location','engine.type','num.of.cylinders','fuel.system','body.style')
auto.data[, factcols]<-lapply(auto.data[,factcols], as.factor)
auto.data[complete.cases(auto.data),]
}
auto.data <- read.auto()
read.auto = function(file = 'Automobile price data _Raw_.csv'){
auto.data <- read.csv(file, header=TRUE, stringsAsFactors=FALSE)
numcols <- c('bore','stroke','horsepower','price','peak.rpm')
auto.data[, numcols]<-lapply(auto.data[,numcols], as.numeric)
factcols <- c('make','fuel.type','aspiration','num.of.doors','drive.wheels','engine.location','engine.type','num.of.cylinders','fuel.system','body.style')
auto.data[, factcols]<-lapply(auto.data[,factcols], as.factor)
auto.data[complete.cases(auto.data),]
}
auto.data <- read.auto()
str(auto.data)
summary(auto.data)
auto.data$price <- log(auto.data$price)
auto.data <- auto.data[,-(1:2)]
str(auto.data)
mod.mat = model.matrix(price ~ ., data = auto.data)
mod.mat[1:10, ]
auto.data <- read.auto()
# View dataset and summary statistics
str(auto.data)
summary(auto.data)
## Clean up dataset
## remove first two columns
auto.data <- auto.data[,-(1:2)]
## Transform price to log(price) based on previous work
auto.data$price <- log(auto.data$price)
##
##
mod.mat = model.matrix(price ~ ., data = auto.data)
mod.mat[1:10, ]
str(auto.data)
auto.data <- read.auto()
str(auto.data)
auto.data <- read.auto()
read.auto = function(file = 'Automobile price data _Raw_.csv'){
auto.data <- read.csv(file, header=TRUE, stringsAsFactors=FALSE)
numcols <- c('bore','stroke','horsepower','price','peak.rpm')
auto.data[, numcols]<-lapply(auto.data[,numcols], as.numeric)
factcols <- c('fuel.type','aspiration','num.of.doors','drive.wheels','engine.location','engine.type','num.of.cylinders','fuel.system','body.style')
auto.data[, factcols]<-lapply(auto.data[,factcols], as.factor)
auto.data[complete.cases(auto.data),]
}
auto.data <- read.auto()
View(auto.data)
View(auto.data)
str(auto.data)
auto.data <- auto.data[,-(1:2)]
auto.data$price <- log(auto.data$price)
##
##
mod.mat = model.matrix(price ~ ., data = auto.data)
mod.mat[1:10, ]
lm.step = stepAIC(auto.data, direction = 'both')
lm.price = lm(price ~ ., data = auto.data)
summary(lm.price)
plot(lm.price)
lm.price = lm(price ~ ., data = auto.data)
summary(lm.price)
plot(lm.price)
lm.step = stepAIC(auto.data, direction = 'both')
require ('MASS')
lm.step = stepAIC(auto.data, direction = 'both')
lm.step <- stepAIC(auto.data, direction = 'both')
lm.step <- stepAIC(auto.data, direction = 'forward')
str(auto.data)
read.auto = function(file = 'Automobile price data _Raw_.csv'){
auto.data <- read.csv(file, header=TRUE, stringsAsFactors=FALSE)
numcols <- c('bore','stroke','horsepower','price','peak.rpm')
auto.data[, numcols]<-lapply(auto.data[,numcols], as.numeric)
factcols <- c('make','fuel.type','aspiration','num.of.doors','drive.wheels','engine.location','engine.type','num.of.cylinders','fuel.system','body.style')
auto.data[, factcols]<-lapply(auto.data[,factcols], as.factor)
auto.data[complete.cases(auto.data),]
}
auto.data <- read.auto()
str(auto.data)
auto.data <- auto.data[,-(1:2)]
str(auto.data)
lm.step <- stepAIC(auto.data, direction = 'both')
lm.price <- lm(price ~ ., data = auto.data)
lm.step <- stepAIC(lm.price, direction = 'both')
lm.step$anova # ANOVA of the result
summary(lm.step) # Summary of the best model
plot(lm.step)
